<ui:FluentWindow
    x:Class="ComputedConverters.Test.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="http://schemas.github.com/computedconverters/2024/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ComputedConverters.Test"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:vio="http://schemas.lepo.co/wpfui/2022/xaml/violeta"
    xmlns:ws="https://schemas.elecho.dev/wpfsuite"
    Title="MainWindow"
    Width="1200"
    Height="800"
    d:Background="#232323"
    AllowDrop="True"
    Drop="{c:EventBinding DropCommand}"
    ExtendsContentIntoTitleBar="True"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources />
    <Grid>
        <ws:WrapPanel
            Margin="16,48,16,16"
            HorizontalSpacing="8"
            VerticalSpacing="8">
            <!-- DynamicResource -->
            <!-- Unbinding -->
            <ui:Card>
                <ws:StackPanel Spacing="8">
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>DynamicResource</TextBlock>
                            <LineBreak />
                            <TextBlock>Unbinding</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock Text="{DynamicResource Guid}" />
                    <TextBlock Text="{DynamicResource {c:Unbinding {Binding GuidKey}}}" />
                    <TextBlock Text="{c:DynamicResource Guid}" />
                    <TextBlock Text="{c:DynamicResource {Binding GuidKey}}" />
                    <TextBlock Text="{c:DynamicResource {Binding GuidKey, Mode=OneTime}}" />
                    <Button
                        Command="{Binding ChangeGuidCommand}"
                        Content="ChangeGuid" />
                </ws:StackPanel>
            </ui:Card>
            <!-- Cast -->
            <!-- Bool -->
            <!-- GetType -->
            <!-- StringEmpty -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>Cast</TextBlock>
                            <LineBreak />
                            <TextBlock>Bool</TextBlock>
                            <LineBreak />
                            <TextBlock>GetType</TextBlock>
                            <LineBreak />
                            <TextBlock>StringEmpty</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock Text="{c:Cast {c:Bool false}, TargetType={c:GetType {c:StringEmpty}}}" />
                    <TextBlock Text="{c:Cast {c:Bool true}, TargetType={c:GetType {c:StringEmpty}}}" />
                </ws:StackPanel>
            </ui:Card>
            <!-- Color -->
            <!-- SolidColorBrush -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>Color</TextBlock>
                            <LineBreak />
                            <TextBlock>SolidColorBrush</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock
                        Foreground="{c:SolidColorBrush {c:Color '#980230'}}"
                        Text="Color" />
                </ws:StackPanel>
            </ui:Card>
            <!-- IfConverter -->
            <!-- If -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Converter:</TextBlock>
                            <TextBlock>IfConverter</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock>
                        <TextBlock.Text>
                            <Binding Path="State">
                                <Binding.Converter>
                                    <c:IfConverter Condition="True">
                                        <c:IfConverter.TrueValue>
                                            <c:ValueConverterGroup>
                                                <c:IntToBoolConverter TrueValue="1" />
                                                <c:BoolToStringConverter TrueValue="is 1" />
                                            </c:ValueConverterGroup>
                                        </c:IfConverter.TrueValue>
                                        <c:IfConverter.FalseValue>
                                            <c:ValueConverterGroup>
                                                <c:IntToBoolConverter TrueValue="2" />
                                                <c:BoolToStringConverter TrueValue="is 2" />
                                            </c:ValueConverterGroup>
                                        </c:IfConverter.FalseValue>
                                    </c:IfConverter>
                                </Binding.Converter>
                            </Binding>
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBlock Text="{c:Computed '$P == 1 ? \'is 1\' : \'is 2\'', P={Binding State}}" />
                    <UserControl>
                        <c:If Condition="{Binding IsLoading}">
                            <c:If.TrueValue>
                                <TextBlock Text="1" />
                            </c:If.TrueValue>
                            <c:If.FalseValue>
                                <TextBlock Text="0" />
                            </c:If.FalseValue>
                        </c:If>
                    </UserControl>
                    <UserControl>
                        <c:If ConditionValue="True">
                            <c:If.TrueValue>
                                <TextBlock Text="1" />
                            </c:If.TrueValue>
                            <c:If.FalseValue>
                                <TextBlock Text="0" />
                            </c:If.FalseValue>
                        </c:If>
                    </UserControl>
                </ws:StackPanel>
            </ui:Card>
            <!-- I18N -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>I18N</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock Text="{c:I18n AboutProgram}" />
                </ws:StackPanel>
            </ui:Card>
            <!-- LocaleDescriptionConverter -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Converter:</TextBlock>
                            <TextBlock>LocaleDescriptionConverter</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock Text="{Binding TestLocaleEnumValue, Converter={x:Static c:EnumLocaleDescriptionConverter.Instance}}" />
                </ws:StackPanel>
            </ui:Card>
            <!-- AlternatingGridColorExtension -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>AlternatingGridColor</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock
                            Grid.Row="0"
                            Foreground="{c:AlternatingGridColor ColorEven='Yellow',
                                                                ColorOdd='Red'}"
                            Text="0" />
                        <TextBlock
                            Grid.Row="1"
                            Foreground="{c:AlternatingGridColor ColorEven='Yellow',
                                                                ColorOdd='Red'}"
                            Text="1" />
                        <TextBlock
                            Grid.Row="2"
                            Foreground="{c:AlternatingGridColor ColorEven='Yellow',
                                                                ColorOdd='Red'}"
                            Text="2" />
                        <TextBlock
                            Grid.Row="3"
                            Foreground="{c:AlternatingGridColor ColorEven='Yellow',
                                                                ColorOdd='Red'}"
                            Text="3" />
                    </Grid>
                </ws:StackPanel>
            </ui:Card>
            <!-- StaticExtension -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>StaticExtension</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <!--<Label Content="{x:Static local:StaticClass.Instance.StaticProperty}" />-->
                    <Label
                        xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=System.Runtime"
                        Content="{x:Static diagnostics:Debugger.IsAttached}" />
                    <Label Content="{Binding StaticProperty, Source={c:Static local:StaticClass.Instance}}" />
                    <Label Content="{c:Type local:StaticClass}" />
                    <Label Content="{x:Type local:StaticClass}" />
                </ws:StackPanel>
            </ui:Card>
            <!-- Computed -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Reactivity:</TextBlock>
                            <TextBlock>Computed</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <!--<Label Content="{x:Static local:StaticClass.Instance.StaticProperty}" />-->
                    <Label Content="{Binding Width}" />
                    <Label Content="{Binding Height}" />
                    <Label Content="{Binding Area}" />
                    <Button
                        Command="{Binding ChangeWithOrHeightCommand}"
                        Content="ChangeWithOrHeight" />
                </ws:StackPanel>
            </ui:Card>
            <!-- Converter -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>Converter</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock
                        xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=System.Runtime"
                        Text="Visiable on debugger attached."
                        Visibility="{c:Converter Value={x:Static diagnostics:Debugger.IsAttached},
                                                 Converter={x:Static c:BoolToVisibilityConverter.Instance}}" />
                </ws:StackPanel>
            </ui:Card>
            <!-- SetServiceLocator -->
            <!-- ServiceLocator -->
            <ui:Card>
                <ws:StackPanel>
                    <ws:StackPanel.Resources>
                        <c:SetServiceLocator Value="{c:Unbinding {Binding ServiceProvider, Source={c:Static local:App.Current}}}" />
                    </ws:StackPanel.Resources>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>SetServiceLocator</TextBlock>
                            <LineBreak />
                            <TextBlock>ServiceLocator</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <c:ServiceLocator Type="{x:Type local:ServiceLocatorTestPage}" />
                </ws:StackPanel>
            </ui:Card>
            <!-- BitmapToImageSourceConverter -->
            <ui:Card>
                <ws:StackPanel>
                    <ws:StackPanel.Resources>
                        <c:BitmapToImageSourceConverter x:Key="BitmapToImageSourceConverter" />
                    </ws:StackPanel.Resources>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Converter:</TextBlock>
                            <LineBreak />
                            <TextBlock>BitmapToImageSourceConverter</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <Image
                        Height="100"
                        Source="{Binding Bitmap, Converter={StaticResource BitmapToImageSourceConverter}}" />
                </ws:StackPanel>
            </ui:Card>
            <!-- CastConverter -->
            <ui:Card>
                <ws:StackPanel>
                    <ws:StackPanel.Resources>
                        <c:CastConverter
                            x:Key="CastConverter"
                            TargetType="{c:TypeofInt}" />
                        <c:ChangeTypeConverter
                            x:Key="ChangeTypeConverter"
                            TargetType="{c:TypeofInt}" />
                    </ws:StackPanel.Resources>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Converter:</TextBlock>
                            <TextBlock>CastConverter</TextBlock>
                            <LineBreak />
                            <TextBlock>ChangeTypeConverter</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <ui:StackPanel
                        Orientation="Horizontal"
                        Spacing="8">
                        <TextBlock Text="{Binding CastConverterObject}" />
                        <TextBlock Text="{Binding CastConverterObject, Converter={StaticResource CastConverter}}" />
                        <TextBlock Text="{Binding CastConverterObject, Converter={StaticResource ChangeTypeConverter}}" />
                    </ui:StackPanel>
                </ws:StackPanel>
            </ui:Card>
        </ws:WrapPanel>
        <ui:TitleBar>
            <ui:TitleBar.Icon>
                <ui:ImageIcon Source="pack://application:,,,/logo.ico" />
            </ui:TitleBar.Icon>
            <ui:TitleBar.Title>
                <c:StringFormat Format="{}{0} v{1}">
                    <c:StringFormat.Values>
                        <x:Array Type="{c:TypeofString}">
                            <x:Array.Items>
                                <c:String Value="ComputedConverters.Test" />
                                <x:Static Member="local:AppConfig.Version" />
                            </x:Array.Items>
                        </x:Array>
                    </c:StringFormat.Values>
                </c:StringFormat>
            </ui:TitleBar.Title>
        </ui:TitleBar>
    </Grid>
</ui:FluentWindow>
