<ui:FluentWindow
    x:Class="ComputedConverters.Test.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="urn:ComputedConverters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ComputedConverters.Test"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:vio="http://schemas.lepo.co/wpfui/2022/xaml/violeta"
    xmlns:ws="https://schemas.elecho.dev/wpfsuite"
    Title="MainWindow"
    Width="800"
    Height="450"
    d:Background="#232323"
    ExtendsContentIntoTitleBar="True"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources />
    <Grid>
        <ws:WrapPanel
            Margin="16,48,16,16"
            HorizontalSpacing="8"
            VerticalSpacing="8">
            <!-- DynamicResource -->
            <!-- Unbinding -->
            <ui:Card>
                <ws:StackPanel Spacing="8">
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>DynamicResource</TextBlock>
                            <TextBlock>Unbinding</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock Text="{DynamicResource Guid}" />
                    <TextBlock Text="{DynamicResource {cc:Unbinding {Binding GuidKey}}}" />
                    <TextBlock Text="{cc:DynamicResource Guid}" />
                    <TextBlock Text="{cc:DynamicResource {Binding GuidKey}}" />
                    <TextBlock Text="{cc:DynamicResource {Binding GuidKey, Mode=OneTime}}" />
                    <Button
                        Command="{Binding ChangeGuidCommand}"
                        Content="ChangeGuid" />
                </ws:StackPanel>
            </ui:Card>
            <!-- Cast -->
            <!-- Bool -->
            <!-- GetType -->
            <!-- StringEmpty -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>Cast</TextBlock>
                            <TextBlock>Bool</TextBlock>
                            <TextBlock>GetType</TextBlock>
                            <TextBlock>StringEmpty</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock Text="{cc:Cast {cc:Bool false}, TargetType={cc:GetType {cc:StringEmpty}}}" />
                    <TextBlock Text="{cc:Cast {cc:Bool true}, TargetType={cc:GetType {cc:StringEmpty}}}" />
                </ws:StackPanel>
            </ui:Card>
            <!-- Color -->
            <!-- SolidColorBrush -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>Color</TextBlock>
                            <TextBlock>SolidColorBrush</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock
                        Foreground="{cc:SolidColorBrush {cc:Color '#980230'}}"
                        Text="Color" />
                </ws:StackPanel>
            </ui:Card>
            <!-- IfConverter -->
            <!-- If -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Converter:</TextBlock>
                            <TextBlock>IfConverter</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock>
                        <TextBlock.Text>
                            <Binding Path="State">
                                <Binding.Converter>
                                    <cc:IfConverter Condition="{cc:Binding '$P == 1', P={Binding State}}">
                                        <cc:IfConverter.TrueValue>
                                            <cc:ValueConverterGroup>
                                                <cc:IntToBoolConverter TrueValue="1" />
                                                <cc:BoolToStringConverter TrueValue="is 1" />
                                            </cc:ValueConverterGroup>
                                        </cc:IfConverter.TrueValue>
                                        <cc:IfConverter.FalseValue>
                                            <cc:ValueConverterGroup>
                                                <cc:IntToBoolConverter TrueValue="2" />
                                                <cc:BoolToStringConverter TrueValue="is 2" />
                                            </cc:ValueConverterGroup>
                                        </cc:IfConverter.FalseValue>
                                    </cc:IfConverter>
                                </Binding.Converter>
                            </Binding>
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBlock Text="{cc:Binding '$P == 1 ? \'is 1\' : \'is 2\'', P={Binding State}}" />
                    <UserControl>
                        <cc:If Condition="{Binding IsLoading}">
                            <cc:If.TrueValue>
                                <TextBlock Text="1" />
                            </cc:If.TrueValue>
                            <cc:If.FalseValue>
                                <TextBlock Text="0" />
                            </cc:If.FalseValue>
                        </cc:If>
                    </UserControl>
                    <UserControl>
                        <cc:If ConditionValue="True">
                            <cc:If.TrueValue>
                                <TextBlock Text="1" />
                            </cc:If.TrueValue>
                            <cc:If.FalseValue>
                                <TextBlock Text="0" />
                            </cc:If.FalseValue>
                        </cc:If>
                    </UserControl>
                </ws:StackPanel>
            </ui:Card>
            <!-- I18N -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>I18N</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock Text="{cc:I18n AboutProgram}" />
                </ws:StackPanel>
            </ui:Card>
            <!-- LocaleDescriptionConverter -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Converter:</TextBlock>
                            <TextBlock>LocaleDescriptionConverter</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock Text="{Binding TestLocaleEnumValue, Converter={x:Static cc:EnumLocaleDescriptionConverter.Instance}}" />
                </ws:StackPanel>
            </ui:Card>
            <!-- AlternatingGridColorExtension -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>AlternatingGridColor</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock
                            Grid.Row="0"
                            Foreground="{cc:AlternatingGridColor ColorEven='Yellow',
                                                                 ColorOdd='Red'}"
                            Text="0" />
                        <TextBlock
                            Grid.Row="1"
                            Foreground="{cc:AlternatingGridColor ColorEven='Yellow',
                                                                 ColorOdd='Red'}"
                            Text="1" />
                        <TextBlock
                            Grid.Row="2"
                            Foreground="{cc:AlternatingGridColor ColorEven='Yellow',
                                                                 ColorOdd='Red'}"
                            Text="2" />
                        <TextBlock
                            Grid.Row="3"
                            Foreground="{cc:AlternatingGridColor ColorEven='Yellow',
                                                                 ColorOdd='Red'}"
                            Text="3" />
                    </Grid>
                </ws:StackPanel>
            </ui:Card>
            <!-- StaticExtension -->
            <ui:Card>
                <ws:StackPanel>
                    <TextBlock Foreground="{DynamicResource SystemAccentColorPrimaryBrush}">
                        <TextBlock.Inlines>
                            <TextBlock>Markup:</TextBlock>
                            <TextBlock>StaticExtension</TextBlock>
                        </TextBlock.Inlines>
                    </TextBlock>
                    <!--<Label Content="{x:Static local:StaticClass.Instance.StaticProperty}" />-->
                    <Label Content="{Binding StaticProperty, Source={cc:Static local:StaticClass.Instance}}" />
                </ws:StackPanel>
            </ui:Card>
        </ws:WrapPanel>
        <ui:TitleBar Title="ComputedConverters.Test">
            <ui:TitleBar.Icon>
                <ui:ImageIcon Source="pack://application:,,,/logo.ico" />
            </ui:TitleBar.Icon>
        </ui:TitleBar>
    </Grid>
</ui:FluentWindow>
